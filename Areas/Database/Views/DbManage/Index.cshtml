@using Microsoft.EntityFrameworkCore

@inject AppDbContext dbContext
@{
    ViewData["Title"] = "Thông tin Db";
    var connect = dbContext.Database.GetDbConnection();
    var dbName = connect.Database;
    var canConnect = dbContext.Database.CanConnect();
    var pendingMigrations = dbContext.Database.GetPendingMigrations();
    var appliedMigrations = dbContext.Database.GetAppliedMigrations();
}

<partial name="_AlertMessage"></partial>

<h1>Thông tin về cơ sở dữ liệu</h1>
<p>- Database: @dbName</p>
<p>- Source: @connect.DataSource</p>
<p>- State: @connect.State</p>
<h2>Migrations</h2>
@foreach (var migration in pendingMigrations)
{
    <p>@migration (pending)</p>
}
@foreach (var migration in appliedMigrations)
{
    <p>@migration</p>
}

@if (!canConnect)
{
    <p class="alert alert-danger">Không có khả năng kết nối đến Database</p>
}
@if(pendingMigrations.Any())
{
    <form method="post">
        <button class="btn btn-success" asp-action="Migrate">Tạo Db (Cập nhật migrations pending)</button>
    </form>
}
else
{
    <h2>Các Table</h2>
    await dbContext.Database.OpenConnectionAsync();
    var tables = dbContext.Database.GetDbConnection().GetSchema("Tables");
    <ul>
        @foreach (System.Data.DataRow row in tables.Rows)
        {
            <li>@row["TABLE_NAME"]</li>
        }
    </ul>
    
    <a class="btn btn-danger" asp-action="DeleteDb">Xóa Database: @dbName</a>
     <a class="btn btn-info" asp-action="SeedData">Seed Data</a>
}
